name: Deploy to Production

on:
  push:
    branches:
      - release/v1.0.3
  workflow_dispatch:

env:
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
  PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
  # 阿里云容器镜像服务配置
  ALIYUN_REGISTRY: registry.cn-hongkong.aliyuncs.com
  ALIYUN_NAMESPACE: tongihttigerbreak
  ALIYUN_REPOSITORY: tigerhouse

jobs:
  # 初始化服务器环境
  init-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize server
        run: |
          chmod +x deploy/init-server.sh
          ./deploy/init-server.sh

  # 构建 Docker 镜像
  build-images:
    needs: init-server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/backend.Dockerfile
          push: true
          tags: |
            ${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ env.ALIYUN_REPOSITORY }}:backend-${{ github.sha }}
            ${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ env.ALIYUN_REPOSITORY }}:backend-latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: docker/frontend.Dockerfile
          push: true
          tags: |
            ${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ env.ALIYUN_REPOSITORY }}:frontend-${{ github.sha }}
            ${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ env.ALIYUN_REPOSITORY }}:frontend-latest

  # 部署应用
  deploy:
    needs: [init-server, build-images]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          ALIYUN_USERNAME: ${{ secrets.ALIYUN_USERNAME }}
          ALIYUN_PASSWORD: ${{ secrets.ALIYUN_PASSWORD }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          # 复制 docker 目录到服务器
          sshpass -p "$SERVER_PASSWORD" scp -o StrictHostKeyChecking=no -r docker "$SERVER_USER@$SERVER_IP:/root/$PROJECT_NAME/"
          
          # 执行部署脚本
          bash deploy/deploy.sh
          
      - name: Notify on success
        if: success()
        run: |
          echo "部署成功！"
          curl -H "Content-Type: application/json" -X POST -d "{\"msg_type\": \"text\",\"content\": {\"text\": \"✅ 项目部署成功\n分支：${{ github.ref }}\n提交：${{ github.sha }}\n触发者：${{ github.actor }}\"}}" ${{ secrets.FEISHU_WEBHOOK_URL }} || true
          
      - name: Notify on failure
        if: failure()
        run: |
          echo "部署失败！"
          curl -H "Content-Type: application/json" -X POST -d "{\"msg_type\": \"text\",\"content\": {\"text\": \"❌ 项目部署失败\n分支：${{ github.ref }}\n提交：${{ github.sha }}\n触发者：${{ github.actor }}\"}}" ${{ secrets.FEISHU_WEBHOOK_URL }} || true 